<!DOCTYPE html>
<html>
<head>
  <title>Hat Relay</title>

  <%= pixiurge_scripts %>

  <style media="screen" type="text/css">
    .errdisplay {
      color: red;
      font-weight: bold;
    }
  </style>
</head>
<body>

  <h1>Hat Relay</h1>

<script>
//<![CDATA[

// Move this Javascript snippet into a separate script file

// Not HTTPS already? Redirect to HTTPS. You need TLS to safely pass around password-equivalent tokens like we do.
if (window.location.protocol != "https:") {
   window.location.protocol = "https:";
   window.location.reload();
}

function game_login() {
  var username = $(".username_field").val();
  var password = $(".password_field").val();
  $(".login").hide();  // We started logging in. Let's not do that more than once, though.

  if(password == "") {
    $(".errdisplay").text("You must set a password to log in!");
    $(".login").show();
    return;
  }
  if(username == "") {
    $(".errdisplay").text("You must set a username to log in!");
    $(".login").show();
    return;
  }

  window.pixi_game.transport.login(username, password);
};

function game_logout() {
  window.pixi_game.transport.logout();
};

function game_register() {
  var username = $(".username_field").val();
  var password = $(".password_field").val();

  if(password == "") {
    $(".errdisplay").text("You must set a password to register an account!");
    $(".login").show();
    return;
  }
  if(username == "") {
    $(".errdisplay").text("You must set a username to register an account!");
    $(".login").show();
    return;
  }

  window.pixi_game.transport.registerAccount(username, password);
};

function good_login(username) {
  $(".login").hide();
};

function bad_login(reason) {
  $(".errdisplay").text("The server couldn't log you in: " + reason);
  $(".login").show();
};

  $(function(){
    if(!("WebSocket" in window)) {
      alert("Sorry, your browser does not appear to support WebSockets. Please use the latest version of your browser, and not any version of Opera Mini.");
      return;
    }

    window.pixi_game = new Pixiurge();
    // WSS in the URL means you need to set up secure sockets! See the file "exe/start_script" for the development version
    var ws = new WebSocket("wss://localhost:3001/");
    pixi_game.setTransport(new Pixiurge.WebsocketTransport(pixi_game, ws));
    var display = new Pixiurge.Display(pixi_game, { container: "#displayarea", pixiOptions: { preserveDrawingBuffer: true } });
    pixi_game.setMessageHandler("display", display);

    // Default input catches document events and feeds them to the event handling system, can be subclassed/overridden to "remote control" or test
    window.pixi_input = new Pixiurge.Input(pixi_game);

    pixi_game.setup();
    pixi_game.transport.onOpen(function() { pixi_game.transport.considerAutoLogin(); });
    pixi_game.transport.onLogin(good_login);
    pixi_game.transport.onFailedLogin(bad_login);

    $(".loginform").submit(function(event) {
      event.preventDefault();  // Don't trigger normal form handler.
      game_login();
    });

    $(".login_button").click(function(event) {
      event.preventDefault();
      game_login();
    });

    $(".register_button").click(function(event) {
      event.preventDefault();
      game_register();
    });

  });

//]]>
</script>

<div id="login" class="login">
  <p class="errdisplay"></p>
  <form class="loginform">
    <label name="username">User Name:</label>
    <input class="username_field" type="text" name="username"></input>

    <label name="password">Password:</label>
    <input class="password_field" type="password" name="password"></input>

    <button class="login_button">Log In</button> OR
    <button type="button" class="register_button">Register a New Account</button>
  </form>
</div>

<div id="displayarea"></div>

<ul>
  <li><a onclick="game_logout();">Log Out</a></li>  <!-- window.pixi_game.pixi_display.pixi_app.view -->
  <li><a onclick="Pixiurge.ScreenShot.saveCanvas($('#displayarea canvas')[0]);">Save Screenshot</a></li>
</ul>

</body>
</html>
